akka {
  loglevel = "DEBUG"

  persistence {
    journal.plugin = "inmemory-journal"
    snapshot-store.plugin = "inmemory-snapshot-store"
  }
}

inmemory-journal {
  class = "akka.persistence.inmemory.journal.InMemoryAsyncWriteJournal"

  ask-timeout = "10s"
}

inmemory-journal-invoices {
  class = "akka.persistence.inmemory.journal.InMemoryAsyncWriteJournal"

  ask-timeout = "10s"

  event-adapters {
    tagged = "examples.TaggedEventAdapter"
  }

  event-adapter-bindings {
    "examples.InvoiceEvent" = tagged
  }
}

inmemory-read-journal {
  # Implementation class of the InMemory ReadJournalProvider
  class = "akka.persistence.inmemory.query.InMemoryReadJournalProvider"

  # Absolute path to the write journal plugin configuration section to get the event adapters from
  write-plugin = "inmemory-journal"

  # there are two modes; sequence or uuid. If set to "sequence" and NoOffset will be requested, then
  # the query will return Sequence offset types. If set to "uuid" and NoOffset will be requested, then
  # the query will return TimeBasedUUID offset types. When the query is called with Sequence then
  # the query will return Sequence offset types and if the query is called with TimeBasedUUID types then
  # the query will return TimeBasedUUID offset types.
  offset-mode = "uuid"

  # ask timeout on Futures
  ask-timeout = "10s"

  # New events are retrieved (polled) with this interval.
  refresh-interval = "100ms"

  # How many events to fetch in one query (replay) and keep buffered until they
  # are delivered downstreams.
  max-buffer-size = "100"
}

cassandra-journal {
  class = "akka.persistence.cassandra.journal.CassandraJournal"

  contact-points = ["cassandra"]

  port = 9042

  keyspace = "invoices"

  event-adapters {
    tagged = "examples.TaggedEventAdapter"
  }

  event-adapter-bindings {
    "examples.InvoiceEvent" = tagged
  }

  tags {
    invoice = 1
  }
}

cassandra-readside {
  contact-points = ["cassandra"]

  port = 9042

  keyspace = "invoices"
}

cassandra-invoice-query-journal {
  class = "akka.persistence.cassandra.query.CassandraReadJournalProvider"

  write-plugin = "cassandra-journal"

  refresh-interval = 3s

  max-buffer-size = 500

  max-result-size-query = 250

  read-consistency = "QUORUM"

  read-retries = 3

  speculative-executions = 0

  speculative-executions-delay = 1s

  first-time-bucket = "20151120"

  eventual-consistency-delay = 10s

  delayed-event-timeout = 0s

  plugin-dispatcher = "cassandra-plugin-default-dispatcher"
}
